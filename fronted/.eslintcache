[{"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\index.js":"1","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\reportWebVitals.js":"2","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\App.js":"3","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\screens\\LoginScreen.js":"4","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\Loader.js":"5","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\Message.js":"6","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\FormContainer.js":"7","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\store.js":"8","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\reducers\\userReducers.js":"9","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\constants\\userConstants.js":"10","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\actions\\userActions.js":"11","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\screens\\RegisterScreen.js":"12","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\Header.js":"13","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\screens\\HomeScreen.js":"14","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\screens\\SubmitShiftsScreen.js":"15","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\reducers\\submittedShiftsReducer.js":"16","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\constants\\submittedShiftsConstants.js":"17","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\actions\\submitShiftsActions.js":"18","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\screens\\ShiftsPanelScreen.js":"19","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\TeamMaker.js":"20","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\constants\\workerTeamsConstants.js":"21","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\reducers\\workerTeamsReducer.js":"22","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\ShiftsMaker.js":"23","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\reducers\\dateDaysReducers.js":"24","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\constants\\dateDaysConstants.js":"25","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\actions\\dateDaysActions.js":"26","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\actions\\scheduleActions.js":"27","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\constants\\scheduleConstants.js":"28","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\reducers\\scheduleReducers.js":"29","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\ShiftsCount.js":"30","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\Paginate.js":"31","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\Sidebar.js":"32","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\screens\\UserEditScreen.js":"33","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\newUserForm.js":"34","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\NewUserForm.js":"35","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\screens\\MyShiftsScreen.js":"36","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\DemoAlert.js":"37","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\ThemeModeButton.js":"38","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\reducers\\themeReducers.js":"39","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\constants\\themeConstants.js":"40","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\DisableSubmittingButton.js":"41"},{"size":597,"mtime":1607379995273,"results":"42","hashOfConfig":"43"},{"size":362,"mtime":499162500000,"results":"44","hashOfConfig":"43"},{"size":1400,"mtime":1612003760226,"results":"45","hashOfConfig":"43"},{"size":2364,"mtime":1611762530185,"results":"46","hashOfConfig":"43"},{"size":361,"mtime":1601747856320,"results":"47","hashOfConfig":"43"},{"size":293,"mtime":1601747719625,"results":"48","hashOfConfig":"43"},{"size":427,"mtime":1611995097967,"results":"49","hashOfConfig":"43"},{"size":2707,"mtime":1612095501849,"results":"50","hashOfConfig":"43"},{"size":3768,"mtime":1610983228325,"results":"51","hashOfConfig":"43"},{"size":1532,"mtime":1607737853205,"results":"52","hashOfConfig":"43"},{"size":6449,"mtime":1611994844280,"results":"53","hashOfConfig":"43"},{"size":3487,"mtime":1607958221893,"results":"54","hashOfConfig":"43"},{"size":2264,"mtime":1612004641074,"results":"55","hashOfConfig":"43"},{"size":5882,"mtime":1612003604323,"results":"56","hashOfConfig":"43"},{"size":5579,"mtime":1612094295354,"results":"57","hashOfConfig":"43"},{"size":2416,"mtime":1610620948209,"results":"58","hashOfConfig":"43"},{"size":1019,"mtime":1610619911629,"results":"59","hashOfConfig":"43"},{"size":4267,"mtime":1611629738069,"results":"60","hashOfConfig":"43"},{"size":648,"mtime":1610550673777,"results":"61","hashOfConfig":"43"},{"size":4616,"mtime":1610552297056,"results":"62","hashOfConfig":"43"},{"size":262,"mtime":1608688735995,"results":"63","hashOfConfig":"43"},{"size":464,"mtime":1609954022075,"results":"64","hashOfConfig":"43"},{"size":16373,"mtime":1612091271183,"results":"65","hashOfConfig":"43"},{"size":1184,"mtime":1612094465826,"results":"66","hashOfConfig":"43"},{"size":690,"mtime":1612091859547,"results":"67","hashOfConfig":"43"},{"size":3771,"mtime":1612093488922,"results":"68","hashOfConfig":"43"},{"size":5511,"mtime":1611386867393,"results":"69","hashOfConfig":"43"},{"size":1466,"mtime":1610782337675,"results":"70","hashOfConfig":"43"},{"size":3755,"mtime":1610796160855,"results":"71","hashOfConfig":"43"},{"size":1470,"mtime":1610785953423,"results":"72","hashOfConfig":"43"},{"size":546,"mtime":1610797485464,"results":"73","hashOfConfig":"43"},{"size":2965,"mtime":1612094575170,"results":"74","hashOfConfig":"43"},{"size":4201,"mtime":1611847309198,"results":"75","hashOfConfig":"43"},{"size":3488,"mtime":1610988326737,"results":"76","hashOfConfig":"43"},{"size":3909,"mtime":1611847328437,"results":"77","hashOfConfig":"43"},{"size":3902,"mtime":1611997667931,"results":"78","hashOfConfig":"43"},{"size":322,"mtime":1611846588959,"results":"79","hashOfConfig":"43"},{"size":875,"mtime":1612088822931,"results":"80","hashOfConfig":"43"},{"size":373,"mtime":1612002193837,"results":"81","hashOfConfig":"43"},{"size":54,"mtime":1612002177972,"results":"82","hashOfConfig":"43"},{"size":935,"mtime":1612092968460,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"cmzju7",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"86"},"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\index.js",[],["174","175"],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\reportWebVitals.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\App.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\screens\\LoginScreen.js",["176","177","178"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { login } from '../actions/userActions';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\nconst LoginScreen = ({ history, location }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { error, loading, userInfo } = userLogin;\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n\r\n    return (\r\n        <div className='rtl right'>\r\n            <FormContainer className='rtl right'>\r\n                <h1>התחבר</h1>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && < Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>כתובת מייל</Form.Label>\r\n                        <Form.Control type='email'\r\n                            placeholder='הכנס כתובת אימייל'\r\n                            value={email} onChange={(e) => { setEmail(e.target.value) }}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>סיסמה</Form.Label>\r\n                        <Form.Control type='password'\r\n                            placeholder='הכנס סיסמה'\r\n                            value={password} onChange={(e) => { setPassword(e.target.value) }}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button type='submit' varient='primary'>התבחר</Button>\r\n                </Form>\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\Loader.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\Message.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\FormContainer.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\store.js",["179"],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\reducers\\userReducers.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\constants\\userConstants.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\actions\\userActions.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\Header.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\screens\\HomeScreen.js",["180","181"],"import React, { useEffect } from 'react';\r\nimport { Table, Row, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport uuid from 'react-uuid'\r\nimport { getAllSchedulesAction } from '../actions/scheduleActions';\r\nimport Paginate from '../components/Paginate';\r\n\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    \r\n    const theme = useSelector(state => state.theme);\r\n    const { isDark } = theme;\r\n\r\n\r\n    const month = new Date().getMonth()\r\n    const year = new Date().getFullYear()\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const days = ['ראשון', 'שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת']\r\n    const setDay = (dayNumber) => {\r\n        if (schedules[0]) {\r\n            const dayWord = new Date(Number(new Date(schedules[0].date).getFullYear()), Number(new Date(schedules[0].date).getMonth()), Number(dayNumber)).getDay()\r\n            return days[dayWord]\r\n        } else return null\r\n    }\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n\r\n    const getSchedules = useSelector(state => state.getSchedules);\r\n    const { schedules, pages, page } = getSchedules;\r\n\r\n    const downloadJson = (objectData) => {\r\n        let filename = \"export.json\";\r\n        let contentType = \"application/json;charset=utf-8;\";\r\n        if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n            var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(objectData)))], { type: contentType });\r\n            navigator.msSaveOrOpenBlob(blob, filename);\r\n        } else {\r\n            var a = document.createElement('a');\r\n            a.download = filename;\r\n            a.href = 'data:' + contentType + ',' + encodeURIComponent(JSON.stringify(objectData));\r\n            a.target = '_blank';\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllSchedulesAction(pageNumber))\r\n    }, [dispatch, pageNumber])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row style={{ 'direction': 'rtl' }}>\r\n                <Link\r\n                    className='btn btn-primary my-3'\r\n                    to={userInfo ? '/myshifts' : '/login?redirect=myshifts'}>\r\n                    המשמרות שלי\r\n                    </Link>\r\n                <Link\r\n                    className={`btn my-3 btn-success ${isDark?'':'btn-success-light'}`}\r\n                    to={userInfo ? '/submitshifts' : '/login?redirect=submitshifts'}>\r\n                    הגשת משמרות\r\n                    </Link>\r\n            </Row>\r\n            <Table className=\"right\" striped bordered hover responsive size=\"sm\" variant=\"dark\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>רענון</th>\r\n                        <th>  22:00-6:00</th>\r\n                        <th>משמרת לילה </th>\r\n                        <th>  14:00-22:00</th>\r\n                        <th>משמרת צהריים </th>\r\n                        <th>  06:00-14:00:00</th>\r\n                        <th>משמרת בוקר </th>\r\n                        <th>תאריך</th>\r\n                        <th>יום בשבוע</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td></td>\r\n                            <td>מאבטח 2</td>\r\n                            <td>אחמ\"ש</td>\r\n                            <td>מאבטח 2</td>\r\n                            <td>אחמ\"ש</td>\r\n                            <td>מאבטח 2</td>\r\n                            <td>אחמ\"ש</td>\r\n                        <td></td>\r\n                        <td></td>\r\n                    </tr>\r\n                    {schedules &&\r\n                        schedules[0].shifts.map((day, index) => (\r\n                            <tr key={uuid()}  >\r\n                                <td>\r\n                                    {day.trainings.map((p, index) => <p key={uuid()} className='m-0' style={{ 'display': 'block' }}>{index > 0 ? ',' : null} {p?p.split(' ')[0]:''}</p>)}\r\n                                </td>\r\n                                    <td>{day.evening[0]?day.evening[0].split(' ')[0]:''  || ''}</td>\r\n                                    <td>{day.evening[1]?day.evening[1].split(' ')[0]:''  || ''}</td>\r\n                                    <td>{day.afternoon[0]?day.afternoon[0].split(' ')[0]:'' || ''}</td>\r\n                                    <td>{day.afternoon[1]?day.afternoon[1].split(' ')[0]:'' || ''}</td>\r\n                                    <td>{day.morning[0]?day.morning[0].split(' ')[0]:'' || ''}</td>\r\n                                    <td>{day.morning[1]?day.morning[1].split(' ')[0]:'' || ''}</td>\r\n                                <td>{`${new Date(schedules[0].date).getDate() + index}/${new Date(schedules[0].date).getMonth() + 1}/${new Date(schedules[0].date).getFullYear()}`}</td>\r\n                                <td className={\r\n                                setDay(new Date(schedules[0].date).getDate() + index)==='שישי' ||  setDay(new Date(schedules[0].date).getDate() + index)==='שבת'?\r\n                                isDark?'green':'light-green':''\r\n                            }>{setDay(new Date(schedules[0].date).getDate() + index)}</td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n            {(userInfo && userInfo.isAdmin) && <Button className='m-3' onClick={() => downloadJson(schedules[0].shifts)}>הורד סידור</Button>}\r\n            <Paginate pages={pages} page={page} />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\screens\\SubmitShiftsScreen.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\reducers\\submittedShiftsReducer.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\constants\\submittedShiftsConstants.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\actions\\submitShiftsActions.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\screens\\ShiftsPanelScreen.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\TeamMaker.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\constants\\workerTeamsConstants.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\reducers\\workerTeamsReducer.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\ShiftsMaker.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\reducers\\dateDaysReducers.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\constants\\dateDaysConstants.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\actions\\dateDaysActions.js",["182"],"import {\r\n    UPDATE_DATE_DAYS_REQUEST, UPDATE_DATE_DAYS_SUCCESS, UPDATE_DATE_DAYS_FAIL,\r\n    GET_DATE_DAYS_REQUEST, GET_DATE_DAYS_SUCCESS, GET_DATE_DAYS_FAIL, UPDATE_SUBMITTING_STATUS_DATE_DAYS_REQUEST\r\n} from '../constants/dateDaysConstants.js'\r\nimport axios from 'axios';\r\nimport { getAllSubmittedShiftsByDateAction, getOneSubmittedShiftsByDateAction } from './submitShiftsActions.js'\r\nimport { getInProgressScheduleAction } from './scheduleActions.js';\r\n\r\n\r\nexport const updateDateDaysAction = (dateDays) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: UPDATE_DATE_DAYS_REQUEST })\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/dateDays`, dateDays, config)\r\n        dispatch({ type: UPDATE_DATE_DAYS_SUCCESS, payload: data })\r\n        dispatch({ type: GET_DATE_DAYS_SUCCESS, payload: data })\r\n        if (userInfo.isAdmin) {\r\n            dispatch(getAllSubmittedShiftsByDateAction(data.date))\r\n            dispatch(getInProgressScheduleAction(data.date,data.daysAmount)) \r\n        }\r\n        if (userInfo.name) { \r\n            dispatch(getOneSubmittedShiftsByDateAction(data.date))\r\n\r\n        }\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_DATE_DAYS_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.response\r\n        })\r\n    }\r\n}\r\n\r\nexport const getDateDaysAction = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: GET_DATE_DAYS_REQUEST })\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.get('/api/datedays', config)\r\n        dispatch({ type: GET_DATE_DAYS_SUCCESS, payload: data })\r\n        if (userInfo.isAdmin) {\r\n            dispatch(getAllSubmittedShiftsByDateAction(data.date))\r\n            dispatch(getInProgressScheduleAction(data.date,data.daysAmount)) \r\n        }\r\n        if (userInfo.name) { \r\n            dispatch(getOneSubmittedShiftsByDateAction(data.date))\r\n\r\n        }\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_DATE_DAYS_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.response\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateSubmittingStatus = (disable,id) => async (dispatch, getState) => {\r\n    try {\r\n        console.log(disable);\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/datedays/${id}`, {disable}, config)\r\n        dispatch({ type: UPDATE_DATE_DAYS_SUCCESS, payload: data })\r\n        dispatch({ type: GET_DATE_DAYS_SUCCESS, payload: data })\r\n        console.log(data);\r\n        if (userInfo.isAdmin) {\r\n            dispatch(getAllSubmittedShiftsByDateAction(data.date))\r\n            dispatch(getInProgressScheduleAction(data.date,data.daysAmount)) \r\n        }\r\n        if (userInfo.name) { \r\n            dispatch(getOneSubmittedShiftsByDateAction(data.date))\r\n\r\n        }\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_DATE_DAYS_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.response\r\n        })\r\n    }\r\n}\r\n","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\actions\\scheduleActions.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\constants\\scheduleConstants.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\reducers\\scheduleReducers.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\ShiftsCount.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\Paginate.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\Sidebar.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\screens\\UserEditScreen.js",["183"],"import React, { useEffect, useState } from 'react';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listUsers, deleteUser } from '../actions/userActions';\r\nimport NewUserForm from '../components/NewUserForm.js';\r\nimport DemoAlert from '../components/DemoAlert.js';\r\n\r\n\r\nconst UserEditScreen = ({ history }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [editUser, setEditUser] = useState('')\r\n    const [showDemoAlert, setShowDemoAlert] = useState(false)\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { success: successRegister } = userRegister\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate);\r\n    const { success: successUpdate } = userUpdate;\r\n\r\n\r\n    useEffect(() => {\r\n        setEditUser('')\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successUpdate, successDelete, successRegister])\r\n\r\n    const deleteHandler = (id) => {\r\n        if(userInfo.name ==='demo'){\r\n            setShowDemoAlert(true)\r\n            setTimeout(()=>setShowDemoAlert(false),5000)\r\n            return\r\n        }\r\n        if (window.confirm('Are you sure ')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {showDemoAlert && <DemoAlert/>}\r\n\r\n            <h1 className=\"right\">משתמשים</h1>\r\n            <NewUserForm editUser={editUser} />\r\n            {\r\n                (loading && users) ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                    <Table className='right' striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th></th>\r\n                                <th>מנהל</th>\r\n                                <th>מייל</th>\r\n                                <th>שם</th>\r\n                                <th>.מס</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {users && users.map(user => (\r\n                                <tr key={user._id}>\r\n                                    <td>\r\n                                        <Button variant='light' className='btn-sm' onClick={() => setEditUser(editUser === user._id ? '' : user._id)}>\r\n                                            <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                            <i className='fas fa-trash'></i> \r\n                                        </Button>\r\n                                    </td>\r\n                                    \r\n                                    <td>{user.isAdmin ?\r\n                                        (<i className='fas fa-check' style={{ color: 'green' }}></i>) :\r\n                                        (<i className='fas fa-times' style={{ color: 'red' }}></i>)}\r\n                                    </td>\r\n                                    <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n\r\n                                    <td>{user.name}</td>\r\n                                    <td onClick={() => console.log(user._id)}>{users.findIndex(findUser => findUser.name === user.name) + 1}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\newUserForm.js",["184","185","186","187","188","189","190","191","192","193"],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\NewUserForm.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\screens\\MyShiftsScreen.js",["194","195","196","197","198"],"import React, { useEffect } from 'react'\r\nimport { Table, Form, Button, Alert, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport uuid from 'react-uuid'\r\nimport { Link } from 'react-router-dom';\r\nimport { getAllSchedulesAction } from '../actions/scheduleActions';\r\n\r\n\r\nconst MyShiftsScreen = ({ history }) => {\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n    const dispatch = useDispatch()\r\n    const getSchedules = useSelector(state => state.getSchedules);\r\n    const { schedules, pages, page } = getSchedules;\r\n    const days = ['ראשון', 'שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת']\r\n\r\n    const setDay = (dayNumber) => {\r\n        if (schedules[0]) {\r\n            const dayWord = new Date(Number(new Date(schedules[0].date).getFullYear()), Number(new Date(schedules[0].date).getMonth()), Number(dayNumber)).getDay()\r\n            return days[dayWord]\r\n        } else return null\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/')\r\n        } else if (!schedules) {\r\n            dispatch(getAllSchedulesAction(0))\r\n        }\r\n    }, [dispatch, userInfo])\r\n\r\n    const checkShift = (day) => {\r\n        const shifts = Object.keys(day).map(tempShift => (day[tempShift][0] === userInfo.name || day[tempShift][1] === userInfo.name ? tempShift : null))\r\n        let shift = shifts.filter(tempShift => tempShift !== null)[0]\r\n        let secondShift = shifts.filter(tempShift => (tempShift !== null && tempShift !== shift))[0]\r\n        if (shift) {\r\n            if (secondShift) {\r\n                secondShift = secondShift === 'evening' ? 'ערב' : secondShift === 'morning' ? 'בוקר' : 'צהריים'\r\n            }\r\n            shift = shift === 'evening' ? 'ערב' : shift === 'morning' ? 'בוקר' : 'צהריים'\r\n        }\r\n        return shift ? `${shift ? shift : ''} ${secondShift ? ',' + secondShift : ''}` : 'אין משמרת'\r\n    }\r\n\r\n\r\n\r\n    const exportPDF = () => {\r\n        if (!schedules) {\r\n            return\r\n        }\r\n        window.print()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row style={{ 'direction': 'rtl' }}>\r\n                <Link\r\n                    className='btn btn-primary my-3'\r\n                    to='/'>\r\n                    דף הבית\r\n                    </Link>\r\n\r\n            </Row>\r\n            <Table className=\"right\" striped bordered hover responsive size=\"sm\" variant=\"dark\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>משמרת</th>\r\n                        <th>יום</th>\r\n                        <th>תאריך</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {(schedules && userInfo.name) &&\r\n                        schedules[0].shifts.map((day, index) => (\r\n                            <tr key={uuid()}>\r\n                                <td>\r\n                                    {checkShift(day)}\r\n                                </td>\r\n                                <td className={\r\n                                    setDay(new Date(schedules[0].date).getDate() + index) === 'שישי' || setDay(new Date(schedules[0].date).getDate() + index) === 'שבת' ?\r\n                                        'green' : ''\r\n                                }>{setDay(new Date(schedules[0].date).getDate() + index)}</td>\r\n                                <td>{`${new Date(schedules[0].date).getDate() + index}/${new Date(schedules[0].date).getMonth() + 1}/${new Date(schedules[0].date).getFullYear()}`}</td>\r\n\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n            <Button onClick={exportPDF}>הורד משמרות </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyShiftsScreen\r\n","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\DemoAlert.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\ThemeModeButton.js",["199"],"import React, { useState, useEffect } from 'react'\r\nimport { UPDATE_THEME_COLORS } from '../constants/themeConstants'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst ThemeModeButton = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const theme = useSelector(state => state.theme);\r\n    const { isDark } = theme;\r\n\r\n    const toggleTheme = () => {\r\n        dispatch({type:UPDATE_THEME_COLORS, payload:!isDark})\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n    }, [dispatch, isDark])\r\n\r\n\r\n    return (\r\n        <div className='theme_toggle_container' onClick={toggleTheme}> \r\n            <i className='sun-icon fas fa-sun '></i>\r\n            <i className='moon-icon fas fa-moon '></i>\r\n            <div className={isDark ? 'theme_toggle_button toggle_theme_button' : 'theme_toggle_button'} ></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeModeButton \r\n","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\reducers\\themeReducers.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\constants\\themeConstants.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\DisableSubmittingButton.js",["200","201","202"],"import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Form } from 'react-bootstrap'\r\nimport { updateSubmittingStatus } from '../actions/dateDaysActions';\r\n\r\n\r\nexport const DisableSubmittingButton = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const shiftsDateDays = useSelector(state => state.shiftsDateDays)\r\n    const { date: dateState, daysAmount: daysAmountState, disableSubmitting, id } = shiftsDateDays\r\n\r\n\r\n\r\n    const submitForm = (checked) => {\r\n        dispatch(updateSubmittingStatus(checked, id))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form.Check\r\n                type=\"checkbox\"\r\n                className=\"right\"\r\n                id=\"inlineFormCheck\"\r\n                label=\"בטל אפשרות להגשת משמרות\"\r\n                checked={disableSubmitting} onChange={(e) => submitForm(e.target.checked)}\r\n            />\r\n        </>\r\n    )\r\n}\r\n",{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":2,"column":10,"nodeType":"209","messageId":"210","endLine":2,"endColumn":14},{"ruleId":"207","severity":1,"message":"211","line":3,"column":24,"nodeType":"209","messageId":"210","endLine":3,"endColumn":27},{"ruleId":"207","severity":1,"message":"212","line":3,"column":29,"nodeType":"209","messageId":"210","endLine":3,"endColumn":32},{"ruleId":"213","severity":2,"message":"214","line":50,"column":16,"nodeType":"209","messageId":"215","endLine":50,"endColumn":22},{"ruleId":"207","severity":1,"message":"216","line":16,"column":11,"nodeType":"209","messageId":"210","endLine":16,"endColumn":16},{"ruleId":"207","severity":1,"message":"217","line":17,"column":11,"nodeType":"209","messageId":"210","endLine":17,"endColumn":15},{"ruleId":"207","severity":1,"message":"218","line":3,"column":71,"nodeType":"209","messageId":"210","endLine":3,"endColumn":113},{"ruleId":"219","severity":1,"message":"220","line":64,"column":80,"nodeType":"221","endLine":64,"endColumn":100},{"ruleId":"207","severity":1,"message":"222","line":1,"column":17,"nodeType":"209","messageId":"210","endLine":1,"endColumn":25},{"ruleId":"207","severity":1,"message":"223","line":1,"column":27,"nodeType":"209","messageId":"210","endLine":1,"endColumn":36},{"ruleId":"207","severity":1,"message":"208","line":2,"column":10,"nodeType":"209","messageId":"210","endLine":2,"endColumn":14},{"ruleId":"207","severity":1,"message":"224","line":4,"column":10,"nodeType":"209","messageId":"210","endLine":4,"endColumn":21},{"ruleId":"207","severity":1,"message":"225","line":4,"column":23,"nodeType":"209","messageId":"210","endLine":4,"endColumn":34},{"ruleId":"207","severity":1,"message":"226","line":5,"column":8,"nodeType":"209","messageId":"210","endLine":5,"endColumn":15},{"ruleId":"207","severity":1,"message":"227","line":6,"column":8,"nodeType":"209","messageId":"210","endLine":6,"endColumn":14},{"ruleId":"207","severity":1,"message":"228","line":7,"column":10,"nodeType":"209","messageId":"210","endLine":7,"endColumn":24},{"ruleId":"207","severity":1,"message":"229","line":7,"column":26,"nodeType":"209","messageId":"210","endLine":7,"endColumn":36},{"ruleId":"207","severity":1,"message":"230","line":8,"column":10,"nodeType":"209","messageId":"210","endLine":8,"endColumn":27},{"ruleId":"207","severity":1,"message":"231","line":2,"column":17,"nodeType":"209","messageId":"210","endLine":2,"endColumn":21},{"ruleId":"207","severity":1,"message":"232","line":2,"column":31,"nodeType":"209","messageId":"210","endLine":2,"endColumn":36},{"ruleId":"207","severity":1,"message":"233","line":15,"column":24,"nodeType":"209","messageId":"210","endLine":15,"endColumn":29},{"ruleId":"207","severity":1,"message":"234","line":15,"column":31,"nodeType":"209","messageId":"210","endLine":15,"endColumn":35},{"ruleId":"235","severity":1,"message":"236","line":31,"column":8,"nodeType":"237","endLine":31,"endColumn":28,"suggestions":"238"},{"ruleId":"207","severity":1,"message":"222","line":1,"column":17,"nodeType":"209","messageId":"210","endLine":1,"endColumn":25},{"ruleId":"207","severity":1,"message":"222","line":1,"column":17,"nodeType":"209","messageId":"210","endLine":1,"endColumn":25},{"ruleId":"207","severity":1,"message":"239","line":11,"column":19,"nodeType":"209","messageId":"210","endLine":11,"endColumn":28},{"ruleId":"207","severity":1,"message":"240","line":11,"column":42,"nodeType":"209","messageId":"210","endLine":11,"endColumn":57},"no-native-reassign",["241"],"no-negated-in-lhs",["242"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","no-undef","'isDark' is not defined.","undef","'month' is assigned a value but never used.","'year' is assigned a value but never used.","'UPDATE_SUBMITTING_STATUS_DATE_DAYS_REQUEST' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'Message' is defined but never used.","'Loader' is defined but never used.","'getUserDetails' is defined but never used.","'updateUser' is defined but never used.","'USER_UPDATE_RESET' is defined but never used.","'Form' is defined but never used.","'Alert' is defined but never used.","'pages' is assigned a value but never used.","'page' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'schedules'. Either include them or remove the dependency array.","ArrayExpression",["243"],"'dateState' is assigned a value but never used.","'daysAmountState' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},"Update the dependencies array to be: [dispatch, history, schedules, userInfo]",{"range":"246","text":"247"},[1175,1195],"[dispatch, history, schedules, userInfo]"]