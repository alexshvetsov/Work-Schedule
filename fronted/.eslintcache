[{"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\index.js":"1","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\reportWebVitals.js":"2","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\App.js":"3","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\screens\\LoginScreen.js":"4","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\Loader.js":"5","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\Message.js":"6","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\FormContainer.js":"7","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\store.js":"8","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\reducers\\userReducers.js":"9","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\constants\\userConstants.js":"10","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\actions\\userActions.js":"11","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\screens\\RegisterScreen.js":"12","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\Header.js":"13","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\screens\\HomeScreen.js":"14","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\screens\\SubmitShiftsScreen.js":"15","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\reducers\\submittedShiftsReducer.js":"16","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\constants\\submittedShiftsConstants.js":"17","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\actions\\submitShiftsActions.js":"18","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\screens\\ShiftsPanelScreen.js":"19","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\TeamMaker.js":"20","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\constants\\workerTeamsConstants.js":"21","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\reducers\\workerTeamsReducer.js":"22","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\ShiftsMaker.js":"23","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\reducers\\dateDaysReducers.js":"24","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\constants\\dateDaysConstants.js":"25","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\actions\\dateDaysActions.js":"26","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\actions\\scheduleActions.js":"27","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\constants\\scheduleConstants.js":"28","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\reducers\\scheduleReducers.js":"29","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\ShiftsCount.js":"30","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\Paginate.js":"31","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\Sidebar.js":"32","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\screens\\UserEditScreen.js":"33","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\newUserForm.js":"34","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\NewUserForm.js":"35","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\screens\\MyShiftsScreen.js":"36"},{"size":597,"mtime":1607379995273,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"38"},{"size":1247,"mtime":1611693779133,"results":"40","hashOfConfig":"38"},{"size":2479,"mtime":1607958199113,"results":"41","hashOfConfig":"38"},{"size":361,"mtime":1601747856320,"results":"42","hashOfConfig":"38"},{"size":293,"mtime":1601747719625,"results":"43","hashOfConfig":"38"},{"size":427,"mtime":1607797666302,"results":"44","hashOfConfig":"38"},{"size":2366,"mtime":1610788184647,"results":"45","hashOfConfig":"38"},{"size":3768,"mtime":1610983228325,"results":"46","hashOfConfig":"38"},{"size":1532,"mtime":1607737853205,"results":"47","hashOfConfig":"38"},{"size":6422,"mtime":1610984251949,"results":"48","hashOfConfig":"38"},{"size":3487,"mtime":1607958221893,"results":"49","hashOfConfig":"38"},{"size":2021,"mtime":1611672106701,"results":"50","hashOfConfig":"38"},{"size":5602,"mtime":1611662703069,"results":"51","hashOfConfig":"38"},{"size":3804,"mtime":1611683156332,"results":"52","hashOfConfig":"38"},{"size":2416,"mtime":1610620948209,"results":"53","hashOfConfig":"38"},{"size":1019,"mtime":1610619911629,"results":"54","hashOfConfig":"38"},{"size":4267,"mtime":1611629738069,"results":"55","hashOfConfig":"38"},{"size":648,"mtime":1610550673777,"results":"56","hashOfConfig":"38"},{"size":4616,"mtime":1610552297056,"results":"57","hashOfConfig":"38"},{"size":262,"mtime":1608688735995,"results":"58","hashOfConfig":"38"},{"size":464,"mtime":1609954022075,"results":"59","hashOfConfig":"38"},{"size":15683,"mtime":1611678943427,"results":"60","hashOfConfig":"38"},{"size":1111,"mtime":1609953957283,"results":"61","hashOfConfig":"38"},{"size":379,"mtime":1609670960319,"results":"62","hashOfConfig":"38"},{"size":2557,"mtime":1610792477371,"results":"63","hashOfConfig":"38"},{"size":5511,"mtime":1611386867393,"results":"64","hashOfConfig":"38"},{"size":1466,"mtime":1610782337675,"results":"65","hashOfConfig":"38"},{"size":3755,"mtime":1610796160855,"results":"66","hashOfConfig":"38"},{"size":1470,"mtime":1610785953423,"results":"67","hashOfConfig":"38"},{"size":546,"mtime":1610797485464,"results":"68","hashOfConfig":"38"},{"size":2787,"mtime":1611673115757,"results":"69","hashOfConfig":"38"},{"size":3877,"mtime":1611526331312,"results":"70","hashOfConfig":"38"},{"size":3488,"mtime":1610988326737,"results":"71","hashOfConfig":"38"},{"size":3488,"mtime":1610988326737,"results":"72","hashOfConfig":"38"},{"size":3308,"mtime":1611629133934,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"cmzju7",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"76"},"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\index.js",[],["152","153"],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\reportWebVitals.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\App.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\screens\\LoginScreen.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\Loader.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\Message.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\FormContainer.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\store.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\reducers\\userReducers.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\constants\\userConstants.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\actions\\userActions.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\Header.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\screens\\HomeScreen.js",["154","155"],"import React, { useEffect } from 'react';\r\nimport { Table, Row, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport uuid from 'react-uuid'\r\nimport { getAllSchedulesAction } from '../actions/scheduleActions';\r\nimport Paginate from '../components/Paginate';\r\n\r\n\r\nconst HomeScreen = ({ match }) => {\r\n\r\n    const month = new Date().getMonth()\r\n    const year = new Date().getFullYear()\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const days = ['ראשון', 'שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת']\r\n    const setDay = (dayNumber) => {\r\n        if (schedules[0]) {\r\n            const dayWord = new Date(Number(new Date(schedules[0].date).getFullYear()), Number(new Date(schedules[0].date).getMonth()), Number(dayNumber)).getDay()\r\n            return days[dayWord]\r\n        } else return null\r\n    }\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n\r\n    const getSchedules = useSelector(state => state.getSchedules);\r\n    const { schedules, pages, page } = getSchedules;\r\n\r\n    const downloadJson = (objectData) => {\r\n        let filename = \"export.json\";\r\n        let contentType = \"application/json;charset=utf-8;\";\r\n        if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n            var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(objectData)))], { type: contentType });\r\n            navigator.msSaveOrOpenBlob(blob, filename);\r\n        } else {\r\n            var a = document.createElement('a');\r\n            a.download = filename;\r\n            a.href = 'data:' + contentType + ',' + encodeURIComponent(JSON.stringify(objectData));\r\n            a.target = '_blank';\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllSchedulesAction(pageNumber))\r\n    }, [dispatch, pageNumber])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row style={{ 'direction': 'rtl' }}>\r\n                <Link\r\n                    className='btn btn-primary my-3'\r\n                    to={userInfo ? '/myshifts' : '/login?redirect=myshifts'}>\r\n                    המשמרות שלי\r\n                    </Link>\r\n                <Link\r\n                    className='btn btn-success my-3'\r\n                    to={userInfo ? '/submitshifts' : '/login?redirect=submitshifts'}>\r\n                    הגשת משמרות\r\n                    </Link>\r\n            </Row>\r\n            <Table striped bordered hover responsive className='table-sm'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>רענון</th>\r\n                        <th>משמרת לילה 22:00-6:00</th>\r\n                        <th>משמרת צהריים 14:00-22:00</th>\r\n                        <th>משמרת בוקר 06:00-14:00:00</th>\r\n                        <th>תאריך</th>\r\n                        <th>יום בשבוע</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td className='shiftTD'>\r\n                            <p>אחמ\"ש</p>\r\n                            <p>מאבטח 2</p>\r\n                        </td>\r\n                        <td className='shiftTD'>\r\n                            <p>אחמ\"ש</p>\r\n                            <p>מאבטח 2</p>\r\n                        </td>\r\n                        <td className='shiftTD'>\r\n                            <p>אחמ\"ש</p>\r\n                            <p>מאבטח 2</p>\r\n                        </td>\r\n                        <td></td>\r\n                        <td></td>\r\n                    </tr>\r\n                    {schedules &&\r\n                        schedules[0].shifts.map((day, index) => (\r\n                            <tr key={uuid()}>\r\n                                <td>\r\n                                    {day.trainings.map((p, index) => <p key={uuid()} className='ml-3' style={{ 'display': 'inline-block' }}>{index > 0 ? ',' : null} {p}</p>)}\r\n                                </td>\r\n                                <td className='shiftTD'>\r\n                                    <p>{day.evening[0] || ''}</p>\r\n                                    <p>{day.evening[1] || ''}</p>\r\n                                </td>\r\n                                <td className='shiftTD'>\r\n                                    <p>{day.afternoon[0]}</p>\r\n                                    <p>{day.afternoon[1]}</p>\r\n                                </td>\r\n                                <td className='shiftTD'>\r\n                                    <p>{day.morning[0]}</p>\r\n                                    <p>{day.morning[1]}</p>\r\n                                </td>\r\n                                <td>{`${new Date(schedules[0].date).getDate() + index}/${new Date(schedules[0].date).getMonth() + 1}/${new Date(schedules[0].date).getFullYear()}`}</td>\r\n                                <td>{setDay(new Date(schedules[0].date).getDate() + index)}</td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n            {(userInfo && userInfo.isAdmin) && <Button onClick={() => downloadJson(schedules[0].shifts)}>הורד סידור</Button>}\r\n            <Paginate pages={pages} page={page} />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\screens\\SubmitShiftsScreen.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\reducers\\submittedShiftsReducer.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\constants\\submittedShiftsConstants.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\actions\\submitShiftsActions.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\screens\\ShiftsPanelScreen.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\TeamMaker.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\constants\\workerTeamsConstants.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\reducers\\workerTeamsReducer.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\ShiftsMaker.js",["156"],"import React, { useState, useEffect } from 'react'\r\nimport { Table, Row, Modal, Button, Form, DropdownButton, Dropdown, Spinner } from 'react-bootstrap'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport uuid from 'react-uuid'\r\nimport { updateDateDaysAction, getDateDaysAction } from '../actions/dateDaysActions';\r\nimport { postScheduleAction, updateScheduleAction, postTemporaryScheduleAction, updateTemporaryScheduleAction } from '../actions/scheduleActions';\r\nimport Loader from '../components/Loader';\r\n\r\nimport { UPDATE_TEMP_SHIFTS_ARRAY } from '../constants/scheduleConstants';\r\n\r\nconst ShiftsMaker = () => {\r\n    const dispatch = useDispatch()\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    // const userLogin = useSelector(state => state.userLogin);\r\n    // const { userInfo } = userLogin;\r\n\r\n    const updateSchedule = useSelector(state => state.updateSchedule);\r\n    const { loading: loadingUpdateSchedule } = updateSchedule;\r\n\r\n    const postTemporarySchedule = useSelector(state => state.postTemporarySchedule);\r\n    const { loading: loadingPostTemporarySchedule } = postTemporarySchedule;\r\n\r\n    const updateTemporarySchedule = useSelector(state => state.updateTemporarySchedule);\r\n    const { loading: loadingUpdateTemporarySchedule } = updateTemporarySchedule;\r\n\r\n    const getAllSubmittedShiftsByDate = useSelector(state => state.getAllSubmittedShiftsByDate)\r\n    const { submittedShiftsByDate } = getAllSubmittedShiftsByDate\r\n\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [daysAmount, setDaysAmount] = useState(0);\r\n\r\n    const shiftsDateDays = useSelector(state => state.shiftsDateDays)\r\n    const { date: dateState, daysAmount: daysAmountState } = shiftsDateDays\r\n\r\n    const getInProgressSchedule = useSelector(state => state.getInProgressSchedule)\r\n    const { schedule } = getInProgressSchedule\r\n\r\n\r\n\r\n\r\n    const days = ['ראשון', 'שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת']\r\n\r\n\r\n    const [shifts, setShifts] = useState([])\r\n    const [disableSaveButton, setDisableSaveButton] = useState(false)\r\n\r\n    const setWorker = (worker, day, shift, index) => {\r\n        let tempShifts = [...shifts]\r\n        worker !== 'worker' ? tempShifts[day][shift][index] = worker : tempShifts[day][shift][index] = ''\r\n        setShifts(tempShifts)\r\n        dispatch({ type: UPDATE_TEMP_SHIFTS_ARRAY, payload: tempShifts })\r\n\r\n\r\n    }\r\n\r\n    const setDay = (dayNumber) => {\r\n        const dayWord = new Date(Number(dateState.getFullYear()), Number(dateState.getMonth()), Number(dayNumber)).getDay()\r\n        return days[dayWord]\r\n    }\r\n\r\n    const setOptions = (day, secondWorker, shift, shiftKey) => {\r\n        let options = []\r\n        submittedShiftsByDate.options[day][1].map((workerOption, index) => (\r\n            submittedShiftsByDate.options[day][1][index][1].includes(shift) || submittedShiftsByDate.options[day][1][index][1] === 'הכול' ?\r\n                options.push(submittedShiftsByDate.options[day][1][index][0]) : null)\r\n        )\r\n        if (shifts[day][shiftKey][secondWorker]) {\r\n            options = options.filter(worker => worker !== shifts[day][shiftKey][secondWorker])\r\n        }\r\n\r\n        if (day > 0) {\r\n            if (shiftKey === 'morning') {\r\n                shifts[day - 1].evening.map(worker => options = options.filter(workerFilter => workerFilter !== worker))\r\n                shifts[day].afternoon.map(worker => options = options.filter(workerFilter => workerFilter !== worker))\r\n            }\r\n            if (shiftKey === 'afternoon') {\r\n                shifts[day].morning.map(worker => options = options.filter(workerFilter => workerFilter !== worker))\r\n                shifts[day].evening.map(worker => options = options.filter(workerFilter => workerFilter !== worker))\r\n            }\r\n            if (shiftKey === 'evening') {\r\n                shifts[day].afternoon.map(worker => options = options.filter(workerFilter => workerFilter !== worker))\r\n               if( day < shifts.length-1) shifts[day + 1].morning.map(worker => options = options.filter(workerFilter => workerFilter !== worker)) \r\n            }\r\n        }\r\n\r\n\r\n        //         console.log(day);\r\n        // console.log(secondWorker);\r\n        // console.log(shift);\r\n        // console.log(shiftKey);\r\n        return options\r\n    }\r\n\r\n    const setOptionsTraining = () => {\r\n        let options = []\r\n        for (let i = 0; i < submittedShiftsByDate.options[0][1].length; i++) {\r\n            options.push(submittedShiftsByDate.options[0][1][i][0])\r\n        }\r\n        return options\r\n    }\r\n\r\n    const trainingsHandler = (worker, day) => {\r\n        let tempShifts = [...shifts]\r\n        tempShifts[day].trainings.findIndex(workerArray => workerArray === worker) > -1 ?\r\n            tempShifts[day].trainings.splice(tempShifts[day].trainings.findIndex(workerArray => workerArray === worker), 1)\r\n            : tempShifts[day].trainings.push(worker)\r\n        setShifts(tempShifts)\r\n        dispatch({ type: UPDATE_TEMP_SHIFTS_ARRAY, payload: tempShifts })\r\n\r\n    }\r\n\r\n    const sumbitForm = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateDateDaysAction({ startDate, daysAmount }))\r\n        handleClose()\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (schedule && schedule.done) {\r\n            setDisableSaveButton(true)\r\n\r\n        }\r\n        if (schedule && schedule.shifts) {\r\n            setShifts(schedule.shifts)\r\n\r\n\r\n        } else {\r\n            let shiftsArray = []\r\n            for (let i = 0; i < daysAmountState; i++) {\r\n                shiftsArray.push({\r\n                    morning: [],\r\n                    afternoon: [],\r\n                    evening: [],\r\n                    trainings: []\r\n                })\r\n            }\r\n            setShifts(shiftsArray)\r\n        }\r\n        if (!daysAmountState) {\r\n            dispatch(getDateDaysAction())\r\n        }\r\n    }, [dispatch, daysAmountState, shifts.length, dateState, schedule])\r\n\r\n    const postDoneSchedule = () => {\r\n        if (!schedule || !schedule._id) {\r\n            dispatch(postScheduleAction({ shifts, dateState }))\r\n            setDisableSaveButton(true)\r\n        } else {\r\n            setDisableSaveButton(true)\r\n            dispatch(updateScheduleAction(shifts, schedule._id))\r\n        }\r\n    }\r\n\r\n    const postUpdateTemporarySchedule = () => {\r\n        if (!schedule) {\r\n            dispatch(postTemporaryScheduleAction({ shifts, dateState }))\r\n        } else {\r\n            dispatch(updateTemporaryScheduleAction(shifts, dateState))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row style={{ 'direction': 'rtl' }}>\r\n                <Button variant=\"success\" className=\"my-3\" onClick={handleShow}>\r\n                    עדכן ימים ותאריך להכנת סידור עבודה\r\n                 </Button>\r\n\r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Modal heading</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Group controlId='startDate'>\r\n                                <Form.Label>בחר תאריך</Form.Label>\r\n                                <Form.Control type='date'\r\n\r\n                                    value={startDate} onChange={(e) => setStartDate(e.target.value)}>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='daysAmount'>\r\n                                <Form.Label>בחר כמות ימים</Form.Label>\r\n                                <Form.Control type='number'\r\n\r\n                                    value={daysAmount} onChange={(e) => setDaysAmount(e.target.value)}>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Form>\r\n\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                    </Button>\r\n                        <Button variant=\"primary\" onClick={(e) => sumbitForm(e)}>\r\n                            Save Changes\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                {daysAmountState && <h4 className='my-3 mr-3 align-self'>הכנת סידור עבודה לתאריכים&nbsp;\r\n                    {`${new Date(dateState).getDate()}/${new Date(dateState).getMonth() + 1}`} - {`${new Date(dateState).getDate() + daysAmountState - 1}/${new Date(dateState).getMonth() + 1}`}\r\n                </h4>}\r\n            </Row>\r\n            {dateState && <Table striped bordered hover responsive className='table-sm'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>רענון</th>\r\n                        <th>משמרת לילה 22:00-6:00</th>\r\n                        <th>משמרת צהריים 14:00-22:00</th>\r\n                        <th>משמרת בוקר 06:00-14:00:00</th>\r\n                        <th>תאריך</th>\r\n                        <th>יום בשבוע</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td className='shiftTD'>\r\n                            <p>אחמ\"ש</p>\r\n                            <p>מאבטח 2</p>\r\n                        </td>\r\n                        <td className='shiftTD'>\r\n                            <p>אחמ\"ש</p>\r\n                            <p>מאבטח 2</p>\r\n                        </td>\r\n                        <td className='shiftTD'>\r\n                            <p>אחמ\"ש</p>\r\n                            <p>מאבטח 2</p>\r\n                        </td>\r\n                        <td></td>\r\n                        <td></td>\r\n                    </tr>\r\n                    {submittedShiftsByDate && shifts.length > 0 &&\r\n                        submittedShiftsByDate.options.map((option, index) => (\r\n\r\n                            <tr key={uuid()}>\r\n                                <td>\r\n\r\n                                    <DropdownButton id=\"dropdown-basic-button\" title=\"בחר עובדים \">\r\n                                        {setOptionsTraining().map((worker) => (\r\n                                            <Dropdown.Item key={'checkbox' + index + worker}>\r\n                                                <p className='py-1 center'\r\n                                                    style={{ 'backgroundColor': shifts[index].trainings.findIndex(workerArray => workerArray === worker) > -1 ? 'green' : null }}\r\n                                                    onClick={(e) => { trainingsHandler(worker, index) }}>{worker}</p>\r\n                                            </Dropdown.Item>\r\n                                        ))}\r\n                                    </DropdownButton>\r\n                                </td>\r\n                                <td className='shiftTD'>\r\n                                    <Form.Control className='rtl' as='select' defaultValue={shifts[index].evening[0] || 'worker'} onChange={(e) => setWorker(e.target.value, index, 'evening', 0)}>\r\n                                        <option value={'worker'}>בחר עובד </option>\r\n                                        {setOptions(index, 1, 'לילה', 'evening').map((worker) => <option key={'evening' + worker} value={worker}>{worker} </option>)}\r\n                                    </Form.Control>\r\n                                    <Form.Control className='rtl' as='select' defaultValue={shifts[index].evening[1] || 'worker'} onChange={(e) => setWorker(e.target.value, index, 'evening', 1)}>\r\n                                        <option value={'worker'}>בחר עובד </option>\r\n                                        {setOptions(index, 0, 'לילה', 'evening').map((worker) => <option key={index + 'evening' + worker} value={worker}>{worker} </option>)}\r\n                                    </Form.Control>\r\n                                </td>\r\n                                <td className='shiftTD'>\r\n                                    <Form.Control className='rtl' as='select' defaultValue={shifts[index].afternoon[0] || 'worker'} onChange={(e) => setWorker(e.target.value, index, 'afternoon', 0)}>\r\n                                        <option value={'worker'}>בחר עובד </option>\r\n                                        {setOptions(index, 1, 'צהריים', 'afternoon').map((worker) => <option key={'afternoon' + worker} value={worker}>{worker} </option>)}\r\n                                    </Form.Control>\r\n                                    <Form.Control className='rtl' as='select' defaultValue={shifts[index].afternoon[1] || 'worker'} onChange={(e) => setWorker(e.target.value, index, 'afternoon', 1)}>\r\n                                        <option value={'worker'}>בחר עובד </option>\r\n                                        {setOptions(index, 0, 'צהריים', 'afternoon').map((worker) => <option key={index + 'afternoon' + worker} value={worker}>{worker} </option>)}\r\n                                    </Form.Control>\r\n                                </td>\r\n                                <td className='shiftTD'>\r\n                                    <Form.Control className='rtl' as='select' defaultValue={shifts[index].morning[0] || 'worker'} onChange={(e) => setWorker(e.target.value, index, 'morning', 0)}>\r\n                                        <option value={'worker'}>בחר עובד </option>\r\n                                        {setOptions(index, 1, 'בוקר', 'morning').map((worker) => <option key={'morning' + worker} value={worker}>{worker} </option>)}\r\n                                    </Form.Control>\r\n                                    <Form.Control className='rtl' as='select' defaultValue={shifts[index].morning[1] || 'worker'} onChange={(e) => setWorker(e.target.value, index, 'morning', 1)}>\r\n                                        <option value={'worker'}>בחר עובד </option>\r\n                                        {setOptions(index, 0, 'בוקר', 'morning').map((worker) => <option key={index + 'morning' + worker} value={worker}>{worker} </option>)}\r\n                                    </Form.Control>\r\n                                </td>\r\n                                <th>{`${new Date(dateState).getDate() + index}/${new Date(dateState).getMonth() + 1}`}</th>\r\n                                <th>{setDay(index + 1)}</th>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n            }\r\n\r\n            <Button variant=\"success\" className=\"mr-3\" onClick={postDoneSchedule}>\r\n                שלח סידור חדש\r\n            </Button>\r\n            <Button variant=\"success\" className=\"\" onClick={postUpdateTemporarySchedule} disabled={disableSaveButton}>\r\n                שמור סידור\r\n                </Button>\r\n            {(loadingUpdateSchedule || loadingPostTemporarySchedule || loadingUpdateTemporarySchedule) ? <div className='spinner'><Spinner className='align-self' animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </Spinner></div> : null}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ShiftsMaker\r\n","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\reducers\\dateDaysReducers.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\constants\\dateDaysConstants.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\actions\\dateDaysActions.js",[],["157","158"],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\actions\\scheduleActions.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\constants\\scheduleConstants.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\reducers\\scheduleReducers.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\ShiftsCount.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\Paginate.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\Sidebar.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\screens\\UserEditScreen.js",["159"],"import React, { useEffect, useState } from 'react';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listUsers, deleteUser } from '../actions/userActions';\r\nimport NewUserForm from '../components/NewUserForm.js';\r\n\r\n\r\nconst UserEditScreen = ({ history }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [editUser, setEditUser] = useState('')\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { success: successRegister } = userRegister\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate);\r\n    const { success: successUpdate } = userUpdate;\r\n\r\n\r\n    useEffect(() => {\r\n        setEditUser('')\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successUpdate, successDelete, successRegister])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure ')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"right\">משתמשים</h1>\r\n            <NewUserForm editUser={editUser} />\r\n            {\r\n                (loading && users) ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                    <Table className='right' striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th></th>\r\n                                <th>מנהל</th>\r\n                                <th>מייל</th>\r\n                                <th>שם</th>\r\n                                <th>.מס</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {users && users.map(user => (\r\n                                <tr key={user._id}>\r\n                                    <td>\r\n                                        <Button variant='light' className='btn-sm' onClick={() => setEditUser(editUser === user._id ? '' : user._id)}>\r\n                                            <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                            <i className='fas fa-trash'></i> \r\n                                        </Button>\r\n                                    </td>\r\n                                    \r\n                                    <td>{user.isAdmin ?\r\n                                        (<i className='fas fa-check' style={{ color: 'green' }}></i>) :\r\n                                        (<i className='fas fa-times' style={{ color: 'red' }}></i>)}\r\n                                    </td>\r\n                                    <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n\r\n                                    <td>{user.name}</td>\r\n                                    <td onClick={() => console.log(user._id)}>{users.findIndex(findUser => findUser.name === user.name) + 1}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\newUserForm.js",["160","161","162","163","164","165","166","167","168","169"],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\components\\NewUserForm.js",[],"C:\\Users\\Alex Shvetsov\\Desktop\\Limodim\\work schedule\\fronted\\src\\screens\\MyShiftsScreen.js",["170","171","172","173","174"],"import React, { useEffect } from 'react'\r\nimport { Table, Form, Button, Alert } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport uuid from 'react-uuid'\r\nimport { getAllSchedulesAction } from '../actions/scheduleActions';\r\n\r\n\r\nconst MyShiftsScreen = ({ history }) => {\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n    const dispatch = useDispatch()\r\n    const getSchedules = useSelector(state => state.getSchedules);\r\n    const { schedules, pages, page } = getSchedules;\r\n    const days = ['ראשון', 'שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת']\r\n\r\n    const setDay = (dayNumber) => {\r\n        if (schedules[0]) {\r\n            const dayWord = new Date(Number(new Date(schedules[0].date).getFullYear()), Number(new Date(schedules[0].date).getMonth()), Number(dayNumber)).getDay()\r\n            return days[dayWord]\r\n        } else return null\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/')\r\n        } else if (!schedules) {\r\n            dispatch(getAllSchedulesAction(0))\r\n        }\r\n    }, [dispatch, userInfo])\r\n\r\n    const checkShift = (day) => {\r\n        const shifts = Object.keys(day).map(tempShift => (day[tempShift][0] === userInfo.name || day[tempShift][1] === userInfo.name ? tempShift : null))\r\n        let shift = shifts.filter(tempShift => tempShift !== null)[0]\r\n        let secondShift = shifts.filter(tempShift => (tempShift !== null && tempShift !== shift))[0]\r\n        if (shift) {\r\n            if (secondShift) {\r\n                secondShift = secondShift === 'evening' ? 'ערב' : secondShift === 'morning' ? 'בוקר' : 'צהריים'\r\n            }\r\n            shift = shift === 'evening' ? 'ערב' : shift === 'morning' ? 'בוקר' : 'צהריים'\r\n        }\r\n        return shift ? `${shift ? shift : ''} ${secondShift ? ',' + secondShift : ''}` : 'אין משמרת'\r\n    }\r\n\r\n    const exportPDF = () => {\r\n        if (!schedules) {\r\n            return\r\n        }\r\n        window.print()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Table className='my-shifts' striped bordered hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>משמרת</th>\r\n                        <th>יום</th>\r\n                        <th>תאריך</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {(schedules && userInfo.name) &&\r\n                        schedules[0].shifts.map((day, index) => (\r\n                            <tr key={uuid()}>\r\n                                <td>\r\n                                    {checkShift(day)}\r\n                                </td>\r\n                                <td>{setDay(new Date(schedules[0].date).getDate() + index)}</td>\r\n                                <td>{`${new Date(schedules[0].date).getDate() + index}/${new Date(schedules[0].date).getMonth() + 1}/${new Date(schedules[0].date).getFullYear()}`}</td>\r\n\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n            <Button onClick={exportPDF}>הורד משמרות </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyShiftsScreen\r\n",{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":12,"column":11,"nodeType":"181","messageId":"182","endLine":12,"endColumn":16},{"ruleId":"179","severity":1,"message":"183","line":13,"column":11,"nodeType":"181","messageId":"182","endLine":13,"endColumn":15},{"ruleId":"179","severity":1,"message":"184","line":8,"column":8,"nodeType":"181","messageId":"182","endLine":8,"endColumn":14},{"ruleId":"175","replacedBy":"185"},{"ruleId":"177","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":54,"column":80,"nodeType":"189","endLine":54,"endColumn":100},{"ruleId":"179","severity":1,"message":"190","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":25},{"ruleId":"179","severity":1,"message":"191","line":1,"column":27,"nodeType":"181","messageId":"182","endLine":1,"endColumn":36},{"ruleId":"179","severity":1,"message":"192","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":14},{"ruleId":"179","severity":1,"message":"193","line":4,"column":10,"nodeType":"181","messageId":"182","endLine":4,"endColumn":21},{"ruleId":"179","severity":1,"message":"194","line":4,"column":23,"nodeType":"181","messageId":"182","endLine":4,"endColumn":34},{"ruleId":"179","severity":1,"message":"195","line":5,"column":8,"nodeType":"181","messageId":"182","endLine":5,"endColumn":15},{"ruleId":"179","severity":1,"message":"184","line":6,"column":8,"nodeType":"181","messageId":"182","endLine":6,"endColumn":14},{"ruleId":"179","severity":1,"message":"196","line":7,"column":10,"nodeType":"181","messageId":"182","endLine":7,"endColumn":24},{"ruleId":"179","severity":1,"message":"197","line":7,"column":26,"nodeType":"181","messageId":"182","endLine":7,"endColumn":36},{"ruleId":"179","severity":1,"message":"198","line":8,"column":10,"nodeType":"181","messageId":"182","endLine":8,"endColumn":27},{"ruleId":"179","severity":1,"message":"199","line":2,"column":17,"nodeType":"181","messageId":"182","endLine":2,"endColumn":21},{"ruleId":"179","severity":1,"message":"200","line":2,"column":31,"nodeType":"181","messageId":"182","endLine":2,"endColumn":36},{"ruleId":"179","severity":1,"message":"201","line":14,"column":24,"nodeType":"181","messageId":"182","endLine":14,"endColumn":29},{"ruleId":"179","severity":1,"message":"202","line":14,"column":31,"nodeType":"181","messageId":"182","endLine":14,"endColumn":35},{"ruleId":"203","severity":1,"message":"204","line":30,"column":8,"nodeType":"205","endLine":30,"endColumn":28,"suggestions":"206"},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"no-unused-vars","'month' is assigned a value but never used.","Identifier","unusedVar","'year' is assigned a value but never used.","'Loader' is defined but never used.",["207"],["208"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'Message' is defined but never used.","'getUserDetails' is defined but never used.","'updateUser' is defined but never used.","'USER_UPDATE_RESET' is defined but never used.","'Form' is defined but never used.","'Alert' is defined but never used.","'pages' is assigned a value but never used.","'page' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'schedules'. Either include them or remove the dependency array.","ArrayExpression",["209"],"no-global-assign","no-unsafe-negation",{"desc":"210","fix":"211"},"Update the dependencies array to be: [dispatch, history, schedules, userInfo]",{"range":"212","text":"213"},[1128,1148],"[dispatch, history, schedules, userInfo]"]